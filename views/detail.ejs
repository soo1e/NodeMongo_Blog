<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>BLOG</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <style>
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 10px;
            min-height: 400px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            overflow: auto;
            position: relative; /* 컨테이너에 상대적인 위치 설정 */
        }

        .container h2 {
            text-align: center;
        }

        .container p {
            margin-bottom: 10px;
            padding: 10px;
            width: 100%;
            border-radius: 5px;
            border: 1px solid #ccc;
            resize: none; /* 내용 입력 필드 크기 조절 비활성화 */
            min-height: 200px; /* 최소 높이를 200px로 지정 */
            overflow: auto;
        }

        .container .buttons {
            display: flex;
            flex-direction: row;
            gap: 10px;
            justify-content: center;
        }

        .container img {
            margin-bottom: 20px;
        }

        .container textarea {
            margin-bottom: 10px;
            padding: 10px;
            width: 100%;
            border-radius: 5px;
            border: 1px solid #ccc;
            resize: none; /* 내용 입력 필드 크기 조절 비활성화 */
            height: 200px; /* 높이를 200px로 조절 */
            overflow: auto;
        }

        div.comment p strong {
            margin-left: 10px; /* 댓글 내용이라는 글자에 적용되는 스타일 */
        }

        div.comment p {
            margin-left: 10px; /* 실제 댓글 내용에 적용되는 스타일 */
        }

        .commentDeleteButton {
            margin-left: 10px; /* 댓글 삭제 버튼에 적용되는 스타일 */
        }


        .image-box {
            width: 100%;
            position: relative;
            margin-bottom: 50px;
            margin-top: 50px;
        }


        .image-box img {
            max-width: 100%; /* 이미지가 컨테이너 너비를 초과하지 않도록 합니다. */
            height: auto;
            display: block;
            margin: 0 auto;
        }

        .top-title {
            text-align: center;
            margin-top: 20px; /* 기본적인 여백 설정 */
        }

        /* 이미지가 없거나 작은 경우 top-title을 맨 위로 올립니다. */
        .image-box.no-image img {
            display: none; /* 이미지가 없는 경우 숨깁니다. */
        }

        .top-title {
            text-align: center;
            margin: 20px 0;
            width: 100%;
            position: relative; /* absolute에서 relative로 변경 */
            z-index: 1; /* 다른 요소 위에 표시하기 위한 우선순위 설정 */
        }

    </style>
</head>
<body class="grey-bg">
<%- include('nav.ejs') %>
<!-- 포스트 디테일 페이지 -->
<div class="container mt-5">
    <div class="top-title">
        <h2><%= result.title %></h2>
        <h6>작성자: <%= result.usernick %> · 날짜: <%= result.date %></h6>
    </div>
    <div class="image-box">
        <% if (result.img) { %>
            <img src="<%= result.img %>" alt="이미지" width="400">
        <% } %>
    </div>

    <p><%= result.content %></p>

    <div class="buttons">
        <% if (isAuthenticated && result.user && result.user.toString() === user._id.toString()) { %>
            <!-- 글 작성자와 현재 로그인한 사용자의 ID가 같을 때만 수정 및 삭제 버튼 표시 -->
            <button id="editButton" class="btn btn-success">수정하기</button>
            <button id="deleteButton" class="btn btn-secondary">삭제하기</button>
        <% } %>
    </div>
</div>

<hr style="margin-top: 60px">
<div>
    <p style="margin-left: 200px"><strong><%= result2.length %>개의 댓글</strong></p>
    <!-- 댓글 목록 표시 -->
    <% for (let i = 0; i < result2.length; i++) { %>
        <div class="comment" style="margin-left: 200px">
            <p><strong><%= result2[i].writer %></strong>: <%= result2[i].content %> ( 작성일: <%= result2[i].date %> )

                <!-- 현재 로그인한 사용자와 댓글 작성자의 ID를 비교하여 권한 확인 -->
                <% if (isAuthenticated && result2[i].writerID.toString() === user._id.toString()) { %>
                    <!-- 삭제 버튼 -->
                    <a class="commentDeleteButton" data-comment-id="<%= result2[i]._id %>">❌️</a>
                <% } %>
            </p>
        </div>
    <% } %>
</div>

<form action="/comment" method="post" class="mt-3">
    <div class="mb-3" style="display: flex; align-items: center;
            justify-content: center;">
        <textarea class="form-control" id="commentContent" name="content" rows="3" required style="margin-left: 60px; resize: none; width: 800px; height: 50px " ></textarea>
        <button type="submit" class="btn btn-primary" style="height: 50px; margin-left: 10px;">작성</button>
    </div>
    <input name="parentId" value="<%= result._id %>" style="display: none">
</form>
<%- include('footer.ejs') %>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>
<script>
    // 수정 버튼 클릭 시 호출되는 함수
    document.getElementById("editButton").addEventListener("click", function() {
        // result의 _id 값을 가져와 URL을 생성
        var postId = '<%= result._id %>';
        var editUrl = '/edit/' + postId;
        // 생성한 URL로 리다이렉션
        window.location.href = editUrl;
    });
</script>
<script>
    document.querySelector("#deleteButton").addEventListener("click", function () {
        // result의 _id 값을 가져와 URL을 생성
        var postId = '<%= result._id %>';
        var deleteUrl = '/delete/' + postId;
        // 생성한 URL로 리다이렉션
        window.location.href = deleteUrl;
    });
</script>
<script>
    // 댓글 삭제 버튼 클릭 시 호출되는 함수
    document.querySelectorAll(".commentDeleteButton").forEach(function (button) {
        button.addEventListener("click", function () {
            var commentId = button.getAttribute("data-comment-id");
            var deleteUrl = '/deleteComment/' + commentId;

            // AJAX를 이용하여 댓글 삭제 요청 전송
            var xhr = new XMLHttpRequest();
            xhr.open("DELETE", deleteUrl, true);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    // 성공적으로 삭제된 경우 페이지 새로고침
                    window.location.reload();
                }
            };
            xhr.send();
        });
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var imageBox = document.querySelector(".image-box");
        var topTitle = document.querySelector(".top-title");

        // 이미지가 작거나 없는 경우 no-image 클래스 추가
        if (imageBox.querySelector("img") && imageBox.querySelector("img").naturalHeight <= 50) {
            imageBox.classList.add("no-image");
            topTitle.classList.add("no-image");
        }
    });
</script>
</body>
</html>
